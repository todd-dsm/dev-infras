#!/usr/bin/env bash
# shellcheck disable=SC2155,SC2154
# PURPOSE:  Generate some variables for AWS/EKS. This file is called with one
#           argument while sourcing it in.
# -----------------------------------------------------------------------------
#    EXEC:  source build.env <prod|stage>
# -----------------------------------------------------------------------------

# -----------------------------------------------------------------------------
# Check for arguments
if [[ "$#" -lt 1 ]]; then
    echo "Bro, where's my first argument: stage or prod?"
    return
fi

set -x
# -----------------------------------------------------------------------------
# Client Truths
export TF_VAR_myCo='smpl-cloud'
export TF_VAR_myProject='gitops-demo'
export myComponent='env'

# -----------------------------------------------------------------------------
# The Build Environment
export TF_VAR_envBuild="$1"
# These will set names for: EKS-cluser, managed-node-groups, etc
export TF_VAR_project="${TF_VAR_myProject}-${TF_VAR_envBuild}"
export TF_VAR_cluster_apps="$TF_VAR_project"
#export TF_VAR_aws_acct_no="367652197469"
#export TF_VAR_dns_zone='ptest.us.'
#export TF_VAR_hostedZone='ZPEASGC9BUTW5'
#export TF_VAR_zone_private='false'
export TF_VAR_aws_acct_no="367652197469"
export TF_VAR_dns_zone='bb.vivsoft-lab.io'
export TF_VAR_hostedZone='Z03579603RJAZHR5PPUL7'
export TF_VAR_zone_private='true'
#export TF_VAR_domain="${TF_VAR_dns_zone%.*}"

# -----------------------------------------------------------------------------
# PROJECT; will be part of bucketName, naming rules:
export awsProviderVersion='5.25.0'
export AWS_DEFAULT_REGION='us-gov-east-1'
export TF_VAR_region="$AWS_DEFAULT_REGION"
export TF_VAR_stateBucket="tf-state-${TF_VAR_myProject}-${TF_VAR_envBuild}"
export TF_VAR_bucketKey='env'
export stateLockDynamoDB="${TF_VAR_stateBucket}-lock"

# -----------------------------------------------------------------------------
# Environmental Considerations
# Terraform Constants
case "$TF_VAR_envBuild" in
    stage)
        export TF_VAR_cluster_vault="vault-${TF_VAR_project}"
        export TF_VAR_DATADOG_UUID="stage"
        export TF_VAR_host_cidr='10.101.0.0/16'
        export TF_VAR_minDistSize='3'
        export TF_VAR_maxDistSize='12'
        export TF_VAR_kubeNode_type='t3.small'
        ;;
    prod)
        export TF_VAR_cluster_vault="vault-${TF_VAR_project}"
        export TF_VAR_DATADOG_UUID="prod"
        export TF_VAR_host_cidr='10.100.0.0/16'
        export TF_VAR_minDistSize='4'
        export TF_VAR_maxDistSize='12'
        export TF_VAR_kubeNode_type='t3.medium'
        ;;
    *)  echo "$TF_VAR_envBuild is unsupported; exiting."
        ;;
esac

# -- Makefile -----------------------------------------------------------------
# Same for either ENV; depends on case
export outputDir='./var'
export filePlan="/tmp/tf-${TF_VAR_myProject}.plan"

# -- KUBERNETES ---------------------------------------------------------------
export KUBECONFIG_DIR="${HOME}/.kube"
export KUBERNETES_MASTER="${KUBECONFIG_DIR}/${TF_VAR_cluster_apps}"

# -- KubeDB -------------------------------------------------------------------
# Verify the version in the chart repo when incrementing up
# -- KubeDB -------------------------------------------------------------------
export versKubeDB='v2023.10.9'
export licKey='79e6ac4e-e944-4b1b-8611-48a1bf147cac' # cluster UID

# -- RDBMS --------------------------------------------------------------------
export kubeDbNs='demo'
export pgAdminManifest="${outputDir}/pgadmin.yaml"
export rawPgSqlManifest="https://github.com/kubedb/docs/raw/${versKubeDB}/docs/examples/postgres/quickstart/quick-postgres.yaml"
export pgSqlFileName="${rawPgSqlManifest##*/}"
export pgSqlManifest="${outputDir}/${pgSqlFileName}"

# -----------------------------------------------------------------------------
# RDS CONSTANTS
# -----------------------------------------------------------------------------
export TF_VAR_engine="postgres"
export TF_VAR_identifier="${TF_VAR_myProject}-${TF_VAR_engine}"




# Same for either ENV; depends on case

# What's my IP (public side of home gateway)
export TF_VAR_officeIPAddr="$(curl -s4 icanhazip.com)/32"

# -----------------------------------------------------------------------------
# RDS CONSTANTS
# -----------------------------------------------------------------------------
export TF_VAR_engine="postgres"
export TF_VAR_identifier="${TF_VAR_myProject}-${TF_VAR_engine}-${TF_VAR_envBuild}"

# Change TF backend prefix with ENV change: <stage|prod>
scripts/setup/create-tf-backend.sh

set +x
